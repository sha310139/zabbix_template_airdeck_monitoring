<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>5.0</version>
    <date>2021-02-02T07:24:36Z</date>
    <groups>
        <group>
            <name>airdeck</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>airdeck_monitoring</template>
            <name>airdeck_monitoring</name>
            <groups>
                <group>
                    <name>airdeck</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>Disk Performance</name>
                </application>
                <application>
                    <name>Filesystems</name>
                </application>
                <application>
                    <name>Network interfaces</name>
                </application>
                <application>
                    <name>Storage</name>
                </application>
                <application>
                    <name>Zabbix raw items</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>CPU utilization</name>
                    <type>DEPENDENT</type>
                    <key>system.cpu.util</key>
                    <delay>0</delay>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>CPU utilization in %</description>
                    <preprocessing>
                        <step>
                            <type>JAVASCRIPT</type>
                            <params>//Calculate utilization
return (100 - value)</params>
                        </step>
                    </preprocessing>
                    <master_item>
                        <key>system.cpu.util[,idle]</key>
                    </master_item>
                </item>
                <item>
                    <name>CPU idle time</name>
                    <key>system.cpu.util[,idle]</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <description>The time the CPU has spent doing nothing.</description>
                </item>
                <item>
                    <name>Memory utilization</name>
                    <type>CALCULATED</type>
                    <key>vm.memory.util</key>
                    <history>7d</history>
                    <value_type>FLOAT</value_type>
                    <units>%</units>
                    <params>last(&quot;vm.memory.size[used]&quot;) / last(&quot;vm.memory.size[total]&quot;) * 100</params>
                    <description>Memory utilization in %</description>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>Disk discovery</name>
                    <key>custom.vfs.discover_disks</key>
                    <delay>3600</delay>
                    <item_prototypes>
                        <item_prototype>
                            <name>Disk:$1:Read:Ops per second</name>
                            <key>custom.vfs.dev.read.ops[{#DEVICENAME}]</key>
                            <delay>60</delay>
                            <history>30d</history>
                            <units>ops/s</units>
                            <description>Field #4&#13;
This is the total number of reads completed successfully.</description>
                            <applications>
                                <application>
                                    <name>Disk Performance</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk:$1:Read:Bytes/sec</name>
                            <key>custom.vfs.dev.read.sectors[{#DEVICENAME}]</key>
                            <delay>60</delay>
                            <history>30d</history>
                            <units>B/sec</units>
                            <description>Field #6&#13;
This is the total number of sectors read successfully.</description>
                            <applications>
                                <application>
                                    <name>Disk Performance</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>512</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk:$1:Write:Ops per second</name>
                            <key>custom.vfs.dev.write.ops[{#DEVICENAME}]</key>
                            <delay>60</delay>
                            <history>30d</history>
                            <units>ops/s</units>
                            <description>Field #8&#13;
This is the total number of writes completed successfully.</description>
                            <applications>
                                <application>
                                    <name>Disk Performance</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Disk:$1:Write:Bytes/sec</name>
                            <key>custom.vfs.dev.write.sectors[{#DEVICENAME}]</key>
                            <delay>60</delay>
                            <history>30d</history>
                            <units>B/sec</units>
                            <description>Field #10&#13;
This is the total number of sectors written successfully.</description>
                            <applications>
                                <application>
                                    <name>Disk Performance</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>512</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Disk {#DEVICENAME} - Bytes/second</name>
                            <ymin_type_1>FIXED</ymin_type_1>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>00C800</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.read.sectors[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>C80000</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.write.sectors[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Disk {#DEVICENAME} - Ops/second</name>
                            <graph_items>
                                <graph_item>
                                    <color>00C800</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.read.ops[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>C80000</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.write.ops[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>Disk {#DEVICENAME} - Overview</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>C8C800</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <calc_fnc>ALL</calc_fnc>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.read.sectors[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>3</sortorder>
                                    <color>C8C8C8</color>
                                    <calc_fnc>ALL</calc_fnc>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.read.ops[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>4</sortorder>
                                    <yaxisside>RIGHT</yaxisside>
                                    <calc_fnc>ALL</calc_fnc>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.write.sectors[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>6</sortorder>
                                    <color>000096</color>
                                    <calc_fnc>ALL</calc_fnc>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>custom.vfs.dev.write.ops[{#DEVICENAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Network interface discovery</name>
                    <key>net.if.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#IFNAME}</macro>
                                <value>{$NET.IF.IFNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery of network interfaces.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Bits received</name>
                            <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Bits sent</name>
                            <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                            <delay>3m</delay>
                            <history>7d</history>
                            <units>bps</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                        <item_prototype>
                            <name>Interface {#IFNAME}: Interface type</name>
                            <key>vfs.file.contents[&quot;/sys/class/net/{#IFNAME}/type&quot;]</key>
                            <delay>1h</delay>
                            <history>7d</history>
                            <trends>0d</trends>
                            <description>Indicates the interface protocol type as a decimal value.&#13;
See include/uapi/linux/if_arp.h for all possible values.&#13;
Reference: https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-class-net</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Interface {#IFNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <valuemap>
                                <name>Linux::Interface protocol types</name>
                            </valuemap>
                            <preprocessing>
                                <step>
                                    <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                                    <params>1d</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>Interface {#IFNAME}: Bits sent &amp; received</name>
                            <graph_items>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>net.if.in[&quot;{#IFNAME}&quot;]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>2</sortorder>
                                    <color>F63100</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>net.if.out[&quot;{#IFNAME}&quot;]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Block devices discovery</name>
                    <key>vfs.dev.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#DEVTYPE}</macro>
                                <value>disk</value>
                                <formulaid>C</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.MATCHES}</value>
                                <formulaid>B</formulaid>
                            </condition>
                            <condition>
                                <macro>{#DEVNAME}</macro>
                                <value>{$VFS.DEV.DEVNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>A</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk read request avg waiting time (r_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.read.await[{#DEVNAME}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last(&quot;vfs.dev.read.time.rate[{#DEVNAME}]&quot;)/(last(&quot;vfs.dev.read.rate[{#DEVNAME}]&quot;)+(last(&quot;vfs.dev.read.rate[{#DEVNAME}]&quot;)=0)))*1000*(last(&quot;vfs.dev.read.rate[{#DEVNAME}]&quot;) &gt; 0)</params>
                            <description>This formula contains two boolean expressions that evaluates to 1 or 0 in order to set calculated metric to zero and to avoid division by zero exception.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk read rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!r/s</units>
                            <description>r/s. The number (after merges) of read requests completed per second for the device.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[0]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk write request avg waiting time (w_await)</name>
                            <type>CALCULATED</type>
                            <key>vfs.dev.write.await[{#DEVNAME}]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!ms</units>
                            <params>(last(&quot;vfs.dev.write.time.rate[{#DEVNAME}]&quot;)/(last(&quot;vfs.dev.write.rate[{#DEVNAME}]&quot;)+(last(&quot;vfs.dev.write.rate[{#DEVNAME}]&quot;)=0)))*1000*(last(&quot;vfs.dev.write.rate[{#DEVNAME}]&quot;) &gt; 0)</params>
                            <description>This formula contains two boolean expressions that evaluates to 1 or 0 in order to set calculated metric to zero and to avoid division by zero exception.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Disk write rate</name>
                            <type>DEPENDENT</type>
                            <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                            <delay>0</delay>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>!w/s</units>
                            <description>w/s. The number (after merges) of write requests completed per second for the device.</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Disk {#DEVNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>JSONPATH</type>
                                    <params>$[4]</params>
                                </step>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#DEVNAME}: Get stats</name>
                            <key>vfs.file.contents[/sys/block/{#DEVNAME}/stat]</key>
                            <history>0</history>
                            <trends>0</trends>
                            <value_type>TEXT</value_type>
                            <description>Get contents of /sys/block/{#DEVNAME}/stat for disk stats.</description>
                            <applications>
                                <application>
                                    <name>Zabbix raw items</name>
                                </application>
                            </applications>
                            <preprocessing>
                                <step>
                                    <type>JAVASCRIPT</type>
                                    <params>return JSON.stringify(value.trim().split(/ +/));</params>
                                </step>
                            </preprocessing>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{airdeck_monitoring:vfs.dev.read.await[{#DEVNAME}].min(15m)} &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} or {airdeck_monitoring:vfs.dev.write.await[{#DEVNAME}].min(15m)} &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;}</expression>
                            <name>{#DEVNAME}: Disk read/write request responses are too high (read &gt; {$VFS.DEV.READ.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m or write &gt; {$VFS.DEV.WRITE.AWAIT.WARN:&quot;{#DEVNAME}&quot;} ms for 15m)</name>
                            <priority>WARNING</priority>
                            <description>This trigger might indicate disk {#DEVNAME} saturation.</description>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>{#DEVNAME}: Disk average waiting time</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>vfs.dev.read.await[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>vfs.dev.write.await[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>{#DEVNAME}: Disk read/write rates</name>
                            <graph_items>
                                <graph_item>
                                    <color>1A7C11</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>vfs.dev.read.rate[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>2774A4</color>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>vfs.dev.write.rate[{#DEVNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                    <preprocessing>
                        <step>
                            <type>DISCARD_UNCHANGED_HEARTBEAT</type>
                            <params>1h</params>
                        </step>
                    </preprocessing>
                </discovery_rule>
                <discovery_rule>
                    <name>Mounted filesystem discovery</name>
                    <key>vfs.fs.discovery</key>
                    <delay>1h</delay>
                    <filter>
                        <evaltype>AND</evaltype>
                        <conditions>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.MATCHES}</value>
                                <formulaid>C</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSTYPE}</macro>
                                <value>{$VFS.FS.FSTYPE.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>D</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.MATCHES}</value>
                                <formulaid>A</formulaid>
                            </condition>
                            <condition>
                                <macro>{#FSNAME}</macro>
                                <value>{$VFS.FS.FSNAME.NOT_MATCHES}</value>
                                <operator>NOT_MATCHES_REGEX</operator>
                                <formulaid>B</formulaid>
                            </condition>
                        </conditions>
                    </filter>
                    <description>Discovery of file systems of different types.</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#FSNAME}: Space utilization</name>
                            <key>vfs.fs.size[{#FSNAME},pused]</key>
                            <history>7d</history>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <description>Space utilization in % for {#FSNAME}</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Filesystem {#FSNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#FSNAME}: Total space</name>
                            <key>vfs.fs.size[{#FSNAME},total]</key>
                            <history>7d</history>
                            <units>B</units>
                            <description>Total space in Bytes</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Filesystem {#FSNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>{#FSNAME}: Used space</name>
                            <key>vfs.fs.size[{#FSNAME},used]</key>
                            <history>7d</history>
                            <units>B</units>
                            <description>Used storage in Bytes</description>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Filesystem {#FSNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{airdeck_monitoring:vfs.fs.size[{#FSNAME},pused].last()}&gt;{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;} and&#13;
(({airdeck_monitoring:vfs.fs.size[{#FSNAME},total].last()}-{airdeck_monitoring:vfs.fs.size[{#FSNAME},used].last()})&lt;5G or {airdeck_monitoring:vfs.fs.size[{#FSNAME},pused].timeleft(1h,,100)}&lt;1d)</expression>
                            <name>{#FSNAME}: Disk space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                            <opdata>Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})</opdata>
                            <priority>AVERAGE</priority>
                            <description>Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}.&#13;
 Second condition should be one of the following:&#13;
 - The disk free space is less than 5G.&#13;
 - The disk will be full in less than 24 hours.</description>
                            <manual_close>YES</manual_close>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{airdeck_monitoring:vfs.fs.size[{#FSNAME},pused].last()}&gt;{$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;} and&#13;
(({airdeck_monitoring:vfs.fs.size[{#FSNAME},total].last()}-{airdeck_monitoring:vfs.fs.size[{#FSNAME},used].last()})&lt;10G or {airdeck_monitoring:vfs.fs.size[{#FSNAME},pused].timeleft(1h,,100)}&lt;1d)</expression>
                            <name>{#FSNAME}: Disk space is low (used &gt; {$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}%)</name>
                            <opdata>Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})</opdata>
                            <priority>WARNING</priority>
                            <description>Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.WARN:&quot;{#FSNAME}&quot;}.&#13;
 Second condition should be one of the following:&#13;
 - The disk free space is less than 10G.&#13;
 - The disk will be full in less than 24 hours.</description>
                            <manual_close>YES</manual_close>
                            <dependencies>
                                <dependency>
                                    <name>{#FSNAME}: Disk space is critically low (used &gt; {$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;}%)</name>
                                    <expression>{airdeck_monitoring:vfs.fs.size[{#FSNAME},pused].last()}&gt;{$VFS.FS.PUSED.MAX.CRIT:&quot;{#FSNAME}&quot;} and&#13;
(({airdeck_monitoring:vfs.fs.size[{#FSNAME},total].last()}-{airdeck_monitoring:vfs.fs.size[{#FSNAME},used].last()})&lt;5G or {airdeck_monitoring:vfs.fs.size[{#FSNAME},pused].timeleft(1h,,100)}&lt;1d)</expression>
                                </dependency>
                            </dependencies>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>{#FSNAME}: Disk space usage</name>
                            <width>600</width>
                            <height>340</height>
                            <type>PIE</type>
                            <show_3d>YES</show_3d>
                            <graph_items>
                                <graph_item>
                                    <color>969696</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <type>GRAPH_SUM</type>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>vfs.fs.size[{#FSNAME},total]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>C80000</color>
                                    <calc_fnc>LAST</calc_fnc>
                                    <item>
                                        <host>airdeck_monitoring</host>
                                        <key>vfs.fs.size[{#FSNAME},used]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
            </discovery_rules>
        </template>
    </templates>
    <graphs>
        <graph>
            <name>CPU utilization</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>airdeck_monitoring</host>
                        <key>system.cpu.util</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
        <graph>
            <name>Memory utilization</name>
            <ymin_type_1>FIXED</ymin_type_1>
            <ymax_type_1>FIXED</ymax_type_1>
            <graph_items>
                <graph_item>
                    <drawtype>GRADIENT_LINE</drawtype>
                    <color>1A7C11</color>
                    <item>
                        <host>airdeck_monitoring</host>
                        <key>vm.memory.util</key>
                    </item>
                </graph_item>
            </graph_items>
        </graph>
    </graphs>
    <value_maps>
        <value_map>
            <name>Linux::Interface protocol types</name>
            <mappings>
                <mapping>
                    <value>0</value>
                    <newvalue>from KA9Q: NET/ROM pseudo</newvalue>
                </mapping>
                <mapping>
                    <value>1</value>
                    <newvalue>Ethernet</newvalue>
                </mapping>
                <mapping>
                    <value>2</value>
                    <newvalue>Experimental Ethernet</newvalue>
                </mapping>
                <mapping>
                    <value>3</value>
                    <newvalue>AX.25 Level 2</newvalue>
                </mapping>
                <mapping>
                    <value>4</value>
                    <newvalue>PROnet token ring</newvalue>
                </mapping>
                <mapping>
                    <value>5</value>
                    <newvalue>Chaosnet</newvalue>
                </mapping>
                <mapping>
                    <value>6</value>
                    <newvalue>IEEE 802.2 Ethernet/TR/TB</newvalue>
                </mapping>
                <mapping>
                    <value>7</value>
                    <newvalue>ARCnet</newvalue>
                </mapping>
                <mapping>
                    <value>8</value>
                    <newvalue>APPLEtalk</newvalue>
                </mapping>
                <mapping>
                    <value>15</value>
                    <newvalue>Frame Relay DLCI</newvalue>
                </mapping>
                <mapping>
                    <value>19</value>
                    <newvalue>ATM</newvalue>
                </mapping>
                <mapping>
                    <value>23</value>
                    <newvalue>Metricom STRIP (new IANA id)</newvalue>
                </mapping>
                <mapping>
                    <value>24</value>
                    <newvalue>IEEE 1394 IPv4 - RFC 2734</newvalue>
                </mapping>
                <mapping>
                    <value>27</value>
                    <newvalue>EUI-64</newvalue>
                </mapping>
                <mapping>
                    <value>32</value>
                    <newvalue>InfiniBand</newvalue>
                </mapping>
                <mapping>
                    <value>256</value>
                    <newvalue>ARPHRD_SLIP</newvalue>
                </mapping>
                <mapping>
                    <value>257</value>
                    <newvalue>ARPHRD_CSLIP</newvalue>
                </mapping>
                <mapping>
                    <value>258</value>
                    <newvalue>ARPHRD_SLIP6</newvalue>
                </mapping>
                <mapping>
                    <value>259</value>
                    <newvalue>ARPHRD_CSLIP6</newvalue>
                </mapping>
                <mapping>
                    <value>260</value>
                    <newvalue>Notional KISS type</newvalue>
                </mapping>
                <mapping>
                    <value>264</value>
                    <newvalue>ARPHRD_ADAPT</newvalue>
                </mapping>
                <mapping>
                    <value>270</value>
                    <newvalue>ARPHRD_ROSE</newvalue>
                </mapping>
                <mapping>
                    <value>271</value>
                    <newvalue>CCITT X.25</newvalue>
                </mapping>
                <mapping>
                    <value>272</value>
                    <newvalue>Boards with X.25 in firmware</newvalue>
                </mapping>
                <mapping>
                    <value>280</value>
                    <newvalue>Controller Area Network</newvalue>
                </mapping>
                <mapping>
                    <value>512</value>
                    <newvalue>ARPHRD_PPP</newvalue>
                </mapping>
                <mapping>
                    <value>513</value>
                    <newvalue>Cisco HDLC</newvalue>
                </mapping>
                <mapping>
                    <value>516</value>
                    <newvalue>LAPB</newvalue>
                </mapping>
                <mapping>
                    <value>517</value>
                    <newvalue>Digital's DDCMP protocol</newvalue>
                </mapping>
                <mapping>
                    <value>518</value>
                    <newvalue>Raw HDLC</newvalue>
                </mapping>
                <mapping>
                    <value>519</value>
                    <newvalue>Raw IP</newvalue>
                </mapping>
                <mapping>
                    <value>768</value>
                    <newvalue>IPIP tunnel</newvalue>
                </mapping>
                <mapping>
                    <value>769</value>
                    <newvalue>IP6IP6 tunnel</newvalue>
                </mapping>
                <mapping>
                    <value>770</value>
                    <newvalue>Frame Relay Access Device</newvalue>
                </mapping>
                <mapping>
                    <value>771</value>
                    <newvalue>SKIP vif</newvalue>
                </mapping>
                <mapping>
                    <value>772</value>
                    <newvalue>Loopback device</newvalue>
                </mapping>
                <mapping>
                    <value>773</value>
                    <newvalue>Localtalk device</newvalue>
                </mapping>
                <mapping>
                    <value>774</value>
                    <newvalue>Fiber Distributed Data Interface</newvalue>
                </mapping>
                <mapping>
                    <value>775</value>
                    <newvalue>AP1000 BIF</newvalue>
                </mapping>
                <mapping>
                    <value>776</value>
                    <newvalue>sit0 device - IPv6-in-IPv4</newvalue>
                </mapping>
                <mapping>
                    <value>777</value>
                    <newvalue>IP over DDP tunneller</newvalue>
                </mapping>
                <mapping>
                    <value>778</value>
                    <newvalue>GRE over IP</newvalue>
                </mapping>
                <mapping>
                    <value>779</value>
                    <newvalue>PIMSM register interface</newvalue>
                </mapping>
                <mapping>
                    <value>780</value>
                    <newvalue>High Performance Parallel Interface</newvalue>
                </mapping>
                <mapping>
                    <value>781</value>
                    <newvalue>Nexus 64Mbps Ash</newvalue>
                </mapping>
                <mapping>
                    <value>782</value>
                    <newvalue>Acorn Econet</newvalue>
                </mapping>
                <mapping>
                    <value>783</value>
                    <newvalue>Linux-IrDA</newvalue>
                </mapping>
                <mapping>
                    <value>784</value>
                    <newvalue>Point to point fibrechannel</newvalue>
                </mapping>
                <mapping>
                    <value>785</value>
                    <newvalue>Fibrechannel arbitrated loop</newvalue>
                </mapping>
                <mapping>
                    <value>786</value>
                    <newvalue>Fibrechannel public loop</newvalue>
                </mapping>
                <mapping>
                    <value>787</value>
                    <newvalue>Fibrechannel fabric</newvalue>
                </mapping>
                <mapping>
                    <value>800</value>
                    <newvalue>Magic type ident for TR</newvalue>
                </mapping>
                <mapping>
                    <value>801</value>
                    <newvalue>IEEE 802.11</newvalue>
                </mapping>
                <mapping>
                    <value>802</value>
                    <newvalue>IEEE 802.11 + Prism2 header</newvalue>
                </mapping>
                <mapping>
                    <value>803</value>
                    <newvalue>IEEE 802.11 + radiotap header</newvalue>
                </mapping>
                <mapping>
                    <value>804</value>
                    <newvalue>ARPHRD_IEEE802154</newvalue>
                </mapping>
                <mapping>
                    <value>805</value>
                    <newvalue>IEEE 802.15.4 network monitor</newvalue>
                </mapping>
                <mapping>
                    <value>820</value>
                    <newvalue>PhoNet media type</newvalue>
                </mapping>
                <mapping>
                    <value>821</value>
                    <newvalue>PhoNet pipe header</newvalue>
                </mapping>
                <mapping>
                    <value>822</value>
                    <newvalue>CAIF media type</newvalue>
                </mapping>
                <mapping>
                    <value>823</value>
                    <newvalue>GRE over IPv6</newvalue>
                </mapping>
                <mapping>
                    <value>824</value>
                    <newvalue>Netlink header</newvalue>
                </mapping>
                <mapping>
                    <value>825</value>
                    <newvalue>IPv6 over LoWPAN</newvalue>
                </mapping>
                <mapping>
                    <value>826</value>
                    <newvalue>Vsock monitor header</newvalue>
                </mapping>
            </mappings>
        </value_map>
    </value_maps>
</zabbix_export>
